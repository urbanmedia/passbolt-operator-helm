apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "passbolt-operator.fullname" . }}
  labels:
    {{- include "passbolt-operator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "passbolt-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "passbolt-operator.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsNonRoot: true
      serviceAccountName: {{ include "passbolt-operator.serviceAccountName" . }}
      terminationGracePeriodSeconds: 10
      containers:
        - name: manager
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "ALL"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "--health-probe-bind-address=:8081"
            {{- if .Values.monitoring.enabled }}
            - "--metrics-bind-address=127.0.0.1:8080"
            {{- end }}
            - "--leader-elect"
          env:
            - name: PASSBOLT_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "passbolt-operator.secret.name" . }}
                  key: url
            - name: PASSBOLT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "passbolt-operator.secret.name" . }}
                  key: password
            - name: PASSBOLT_GPG
              valueFrom:
                secretKeyRef:
                  name: {{ include "passbolt-operator.secret.name" . }}
                  key: gpg_key
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
        {{- if .Values.monitoring.enabled }}
        - name: kube-rbac-proxy
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "ALL"
          image: {{ .Values.monitoring.rbacProxy.image.repository }}:{{ .Values.monitoring.rbacProxy.image.tag }}
          imagePullPolicy: {{ .Values.monitoring.rbacProxy.image.pullPolicy }}
          args:
          - "--secure-listen-address=0.0.0.0:8443"
          - "--upstream=http://127.0.0.1:8080/"
          - "--logtostderr=true"
          - "--v=0"
          ports:
          - containerPort: 8443
            protocol: TCP
            name: metrics
          resources:
            {{- toYaml .Values.monitoring.rbacProxy.resources | nindent 12 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: {{ include "passbolt-operator.certificate.secret.name" . }}
